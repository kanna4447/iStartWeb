@model iStartWeb.Models.UserRegisterViewModel


@if (TempData["successMsg"] != null)
{
    <div class="alert alert-success" id="success-alert">
        <strong>Info !</strong>   @TempData["successMsg"]
        <button type="button" class="close" data-dismiss="alert">x</button>
    </div>

}
@if(TempData["emailExists"] != null)
{
<div class="alert alert-danger" id="failureEmail-alert">
    <strong>Info !</strong>   @TempData["emailExists"]
    <button type="button" class="close" data-dismiss="alert">x</button>
</div>

}



@using (Html.BeginForm("Index", "Register", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <section class="h-100" autocomplete="off">
        <div class="container h-100">
            <div class="row justify-content-sm-center h-100">
                <div class="col-xxl-4 col-xl-5 col-lg-5 col-md-7 col-sm-9">

                    <div class="card shadow-lg">
                        <div class="card-body p-5">
                            <h1 class="fs-4 card-title fw-bold mb-4">
                                Register with
                            </h1>
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                            <div class="mb-3">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "mb-2 text-muted" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="mb-3">
                                @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "mb-2 text-muted" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="mb-3">
                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "mb-2 text-muted" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="mb-3">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "mb-2 text-muted" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                                <div class="mb-3" style="color:red"> @TempData["passwordError"]</div>
                                <div class="mb-3" style="color:red">   @TempData["notcontainUpperChar"]</div>

                                <div class="mb-3" style="color:red"> @TempData["notcontainNumber"]</div>
                                <div class="mb-3" style="color:red"> @TempData["notcontainSymbol"]</div>

                            </div>

                            <div class="mb-3">
                                @Html.LabelFor(model => model.ReEnterPassword, htmlAttributes: new { @class = "mb-2 text-muted" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ReEnterPassword, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ReEnterPassword, "", new { @class = "text-danger" })
                                </div>
                                <div class="mb-3" style="color:red"> @TempData["confirmpasswordError"]</div>


                                <div class="mb-3" style="color:red">

                                    @TempData["passwordmismatchError"]

                                </div>


                                <div class="mb-3">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Register" class="btn btn-primary" />
                                    </div>
                                </div>
                                <div class="mb-3">

                                    Already have an account? <a href="../Login/Index" class="text-dark"><p style="color:hotpink">Login<p> </a>

                                </div>

                            </div>



                        </div>

                    </div>
                </div>
            </div>
        </div>

    </section>
}
@section scripts{

    <script>

        window.setTimeout(function () {

            $("#success-alert").fadeTo(500, 0).slideUp(500, function () {
                $(this).remove();
            });
        }, 4000);
        window.setTimeout(function () {

            $("#failureEmail-alert").fadeTo(500, 0).slideUp(500, function () {
                $(this).remove();
            });
        }, 4000);

        

    </script>

}
